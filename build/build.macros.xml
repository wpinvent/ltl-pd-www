<?xml version="1.0"?>
<!DOCTYPE project>

<project name="Build Macros" default="build" basedir="../">

    <!-- JSLINT -->
    <macrodef name="jslint">
        <attribute name="input" />

        <sequential>
            <echo message="JSLINT: @{input}" />

            <!-- TODO: Node - probably faster, but the included jslint.js script doesn't seem to work in node -->

            <!-- Rhino -->
            <exec executable="java" failonerror="true">
                <arg value="-jar" />
                <arg path="${dir.build.tools}/${tool.rhino}" />
                <arg path="${dir.build.tools}/${tool.jslint}" />
                <arg path="@{input}" />
                <arg value="${tool.jslint.opts}" />
            </exec>
        </sequential>
    </macrodef>

    <!-- JSHINT -->
    <macrodef name="jshint">
        <attribute name="input" />

        <sequential>
            <echo message="JSHINT: @{input}" />

            <!-- TODO: Node -->

            <!-- Rhino -->
            <exec executable="java" failonerror="true">
                <arg value="-jar" />
                <arg path="${dir.build.tools}/${tool.rhino}" />
                <arg path="${dir.build.tools}/${tool.jshint}" />
                <arg path="@{input}" />
                <arg value="${tool.jshint.opts}" />
            </exec>
        </sequential>
    </macrodef>

    <!-- CSSLINT -->
    <macrodef name="csslint">
        <attribute name="input" />

        <sequential>
            <echo message="CSSLINT: @{input}" />

            <!-- TODO: Node -->

            <!-- Rhino -->
            <exec executable="java" failonerror="true">
                <arg value="-jar" />
                <arg path="${dir.build.tools}/${tool.rhino}" />
                <arg path="${dir.build.tools}/${tool.csslint}" />
                <arg path="@{input}" />
                <arg value="${tool.csslint.opts}" />
            </exec>
        </sequential>
    </macrodef>

    <!-- SCSS -->
    <macrodef name="scss">
        <attribute name="input"/>
        <attribute name="output"/>

        <sequential>
            <echo message="SCSS: @{input} -> @{output}" />

            <path id="JRuby">
                <fileset file="./${dir.build.tools}/jruby-complete-1.6.7.2.jar"/>
                <fileset file="./${dir.build.tools}/gem-sass.jar"/>
            </path>
            <property name="scss.src" value="${basedir}/@{input}" />
            <property name="scss.dest" value="${basedir}/@{output}" />

            <script language="ruby" classpathref="JRuby">
                <![CDATA[require 'rubygems'
                    require 'sass'
                    require 'sass/exec'
                    opts = Sass::Exec::Sass.new([$project.getProperty('scss.src'), $project.getProperty('scss.dest')])
                    opts.parse]]>
            </script>

            <echo>Sass (scss): generated @{output}</echo>
        </sequential>
    </macrodef>
</project>
