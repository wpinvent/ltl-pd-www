<?xml version="1.0"?>
<!DOCTYPE project>

<project name="LTL Pickup and Delivery Web Project Build"
    default="build"
    basedir="../">
    
    <!-- Use Ant Contrib (foreach task, etc.) -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${basedir}/build/tools/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <!-- Load env vars -->
    <property environment="ENV" />

    <!-- Load Ant properties from file --> 
    <property file="build/build.properties"/>
    
    <!-- Check Ant version -->
    <fail message="Ant version 1.8.2 or greater is required.">
        <condition>
            <not>
                <antversion atleast="1.8.2"/>
            </not>
        </condition>
    </fail>

    <!-- TODO: check for node executable -->

    <target name="scss"
        description="Runs scss tool in ${dir.css}">

        <foreach target="scss-single" param="file">
            <path>
                <fileset dir="${dir.css}">
                    <include name="**/*.scss" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="jslint"
        description="Runs jslint on the app javascript files">

        <foreach target="jslint-single" param="file">
            <path>
                <fileset dir="${dir.source}">
                    <include name="main.js" />
                    <include name="${dir.js}/**/*.js" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="jshint"
        description="Runs jshint on the app javascript files">

        <foreach target="jshint-single" param="file">
            <path>
                <fileset dir="${dir.source}">
                    <include name="main.js" />
                    <include name="${dir.js}/**/*.js" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="csslint"
        depends="scss"
        description="Runs csslint on the app css files">

        <foreach target="csslint-single" param="file">
            <path>
                <fileset dir="${dir.css}">
                    <include name="**/*.css" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="scss-single"
        description="Runs SCSS on a single file">

        <echo message="---------------------------------------------------------" />
        <echo message="SCSS: ${file}" />
        <echo message="---------------------------------------------------------" />

        <basename file="${file}" suffix=".scss" property="file.basename" />

        <!-- JRuby doesn't seem to like absolute paths (on Windows (?)), so force them back to relative -->
        <property name="file.scss" value="${dir.css}/${file.basename}.scss" />
        <property name="file.css" value="${dir.css}/${file.basename}.css" />

        <scss input="${file.scss}" output="${file.css}" />
    </target>

    <target name="jslint-single"
        description="Runs JSLINT on a single file.">

        <echo message="---------------------------------------------------------" />
        <echo message="JSLINT: ${file}" />
        <echo message="---------------------------------------------------------" />

        <!-- TODO: Node - probably faster, but doesn't work right now -->
        <!--
        <exec executable="node" failonerror="true">
            <arg path="${dir.build.tools}/${tool.jslint}" />
            <arg path="${file}" />
            <arg value="${tool.jslint.opts}" />
        </exec>
        -->

        <!-- Rhino -->
        <exec executable="java" failonerror="true">
            <arg value="-jar" />
            <arg path="${dir.build.tools}/${tool.rhino}" />
            <arg path="${dir.build.tools}/${tool.jslint}" />
            <arg path="${file}" />
            <arg value="${tool.jslint.opts}" />
        </exec>
    </target>

    <target name="jshint-single"
        description="Runs JSHINT on a single file.">

        <echo message="---------------------------------------------------------" />
        <echo message="JSHINT: ${file}" />
        <echo message="---------------------------------------------------------" />

        <!-- TODO: Node -->

        <!-- Rhino -->
        <exec executable="java" failonerror="true">
            <arg value="-jar" />
            <arg path="${dir.build.tools}/${tool.rhino}" />
            <arg path="${dir.build.tools}/${tool.jshint}" />
            <arg path="${file}" />
            <arg value="${tool.jshint.opts}" />
        </exec>
    </target>

    <target name="csslint-single"
        description="Runs CSSLINT on a single file.">

        <echo message="---------------------------------------------------------" />
        <echo message="CSSLINT: ${file}" />
        <echo message="Prepare for useless errors..." />
        <echo message="---------------------------------------------------------" />

        <!-- TODO: Node -->

        <!-- Rhino -->
        <exec executable="java" failonerror="true">
            <arg value="-jar" />
            <arg path="${dir.build.tools}/${tool.rhino}" />
            <arg path="${dir.build.tools}/${tool.csslint}" />
            <arg path="${file}" />
            <arg value="${tool.csslint.opts}" />
        </exec>
    </target>

    <target name="clean"
        description="Deletes build output dirs.">

        <echo message="Deleting dir: ${dir.intermediate}..."/>
        <delete dir="./${dir.intermediate}/"/>

        <echo message="Deleting dir: ${dir.publish}..."/>
        <delete dir="./${dir.publish}/"/>
    </target>

    <target name="mkdirs"
        description="Creates the build output dirs." >

        <!-- TODO: r.js might create the publish dir now... -->

        <condition property="publish.exists">
            <available file="${dir.publish}" type="dir"/>
        </condition>

        <condition property="intermediate.exists">
            <available file="${dir.intermediate}" type="dir"/>
        </condition>

        <if>
            <or>
                <equals arg1="${dir.publish}" arg2="."/>
                <equals arg1="${dir.publish}" arg2=".."/>
                <equals arg1="${dir.publish}" arg2="/"/>
                <equals arg1="${dir.publish}" arg2="./"/>
                <equals arg1="${dir.publish}" arg2="../"/>
            </or>
            <then>
                <fail message="Your dir.publish folder is set to ${dir.publish} which could delete your entire site or worse. Change it in project.properties"/>
            </then>
            <else>
                <echo message="Creating directory structure... ${dir.publish}"/>
                <if>
                    <and>
                        <equals arg1="${publish.exists}" arg2="true"/>
                        <equals arg1="${intermediate.exists}" arg2="true"/>
                    </and>
                    <then>
                        <echo message="The directories ${dir.publish} and ${dir.intermediate} already exist."/>
                    </then>
                    <else>
                        <echo message="Creating dir: ${dir.intermediate}..." />
                        <mkdir dir="${dir.intermediate}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.intermediate}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}"/>
                        </copy>

                        <echo message="Creating dir: ${dir.publish}..." />
                        <mkdir dir="${dir.publish}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.publish}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}" />
                        </copy>
                    </else>
                </if>
            </else>
        </if>
    </target>

    <target name="copy-source-to-intermediate"
        description="Copies the source files to the intermediate staging area" >

        <echo message="Copying source files to intermediate..." />

        <copy todir="./${dir.intermediate}" includeEmptyDirs="true">
            <fileset dir="${dir.source}/" excludes="${file.excludes}" />
        </copy>
    </target>

    <target name="run-rjs-on-intermediate"
        description="Runs Require's r.js optimizer on files in intermediate">

        <echo message="Running r.js on intermediate files..." />

        <!-- Use Node rather than Rhino - Rhino is slower and seems to have trouble with r.js -->
        <exec executable="node" failonerror="true">
            <arg line="${basedir}/${tool.rjs}" />
            <arg line="-o" />
            <arg line="${basedir}/${tool.rjs.config}" />
        </exec>
    </target>

    <target name="finalize-build"
        description="Does the final cleanup on the published files">

        <delete file="${dir.publish}/build.txt" />

        <delete>
            <fileset dir="${dir.publish}/css" includes="**/*.scss" />
        </delete>
    </target>

    <target name="build"
        description="Runs a full build.">

        <echo message="-------------------------------------------------" />
        <echo message="Ant build starting..." />
        <echo message="-------------------------------------------------" />

        <!-- Show property values
        <echoproperties />
        -->

        <antcall target="clean" />

        <antcall target="scss" />

        <antcall target="jslint" />

        <antcall target="jshint" />

        <!-- csslint seems to be pretty useless, consider removing -->
        <antcall target="csslint" />

        <antcall target="mkdirs" />

        <antcall target="copy-source-to-intermediate" />

        <antcall target="run-rjs-on-intermediate" />

        <!-- TODO: clean/compress html (see h5bp ant-build-script - htmlcompressor) -->

        <!-- TODO: clean/compress css (see h5bp ant-build-script - yuicompressor) -->

        <!-- TODO: optimize pngs (see h5bp ant-build-script) -->

        <!-- TODO: optimize jpgs (see h5bp ant-build-script) -->

        <!-- TODO: generate documentation (jsdoc3) -->

        <antcall target="finalize-build" />
    </target>

    <!-- Macro for running the Ruby-based scss utility on a .scss/.sass file -->
    <macrodef name="scss">
        <attribute name="input"/>
        <attribute name="output"/>

        <sequential>
            <path id="JRuby">
                <fileset file="./${dir.build.tools}/jruby-complete-1.6.7.2.jar"/>
                <fileset file="./${dir.build.tools}/gem-sass.jar"/>
            </path>
            <property name="scss.src" value="${basedir}/@{input}" />
            <property name="scss.dest" value="${basedir}/@{output}" />

            <script language="ruby" classpathref="JRuby">
                <![CDATA[require 'rubygems'
                    require 'sass'
                    require 'sass/exec'
                    opts = Sass::Exec::Sass.new([$project.getProperty('scss.src'), $project.getProperty('scss.dest')])
                    opts.parse]]>
            </script>

            <echo>Sass (scss): generated @{output}</echo>
        </sequential>
    </macrodef>
</project>
