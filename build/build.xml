<?xml version="1.0"?>
<!DOCTYPE project>
<project name="Build" default="build" basedir="../">
    
    <!-- Load in Ant-Contrib to give us access to some very useful tasks! -->
    <!-- the .jar file is located in the tools directory -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${basedir}/build/tools/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <property environment="ENV" />
    <property file="build/config/default.properties"/>
    
    <var name="stylesheet-files" value="${file.stylesheets}"/>
    <var name="page-files" value="${file.pages}"/>
    
    <fail message="Ant version 1.8.2 or greater is required.">
        <condition>
            <not>
                <antversion atleast="1.8.2"/>
            </not>
        </condition>
    </fail>

    <target name="intro">
        <echo message="-------------------------------------------------" />
        <echo message="Entering build..." />
        <echo message="-------------------------------------------------" />

        <echoproperties />
    </target>

    <target name="scss"
        description="Runs SCSS on the .scss files in ${dir.source}">

        <echo message="Running scss on style.scss..." />
        <scss input="${dir.source}/css/style.scss" output="${dir.source}/css/style.css" />
    </target>

    <target name="clean"
        description="Deletes intermediate and publish dirs">

        <echo message="Deleting dir: ${dir.intermediate}..."/>
        <delete dir="./${dir.intermediate}/"/>

        <echo message="Deleting dir: ${dir.publish}..."/>
        <delete dir="./${dir.publish}/"/>
    </target>

    <target name="mkdirs"
        description="(PRIVATE) Creates the intermediate and publish dirs, and copies the source to the intermediate dir" >

        <condition property="publish.exists">
            <available file="${dir.publish}" type="dir"/>
        </condition>

        <condition property="intermediate.exists">
            <available file="${dir.intermediate}" type="dir"/>
        </condition>

        <if>
            <or>
                <equals arg1="${dir.publish}" arg2="."/>
                <equals arg1="${dir.publish}" arg2=".."/>
                <equals arg1="${dir.publish}" arg2="/"/>
                <equals arg1="${dir.publish}" arg2="./"/>
                <equals arg1="${dir.publish}" arg2="../"/>
            </or>
            <then>
                <fail message="Your dir.publish folder is set to ${dir.publish} which could delete your entire site or worse. Change it in project.properties"/>
            </then>
            <else>
                <echo message="Creating directory structure... ${dir.publish}"/>
                <if>
                    <and>
                        <equals arg1="${publish.exists}" arg2="true"/>
                        <equals arg1="${intermediate.exists}" arg2="true"/>
                    </and>
                    <then>
                        <echo message="The directories ${dir.publish} and ${dir.intermediate} already exist."/>
                    </then>
                    <else>
                        <echo message="Creating dir: ${dir.intermediate}..." />
                        <mkdir dir="${dir.intermediate}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.intermediate}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}"/>
                        </copy>

                        <echo message="Creating dir: ${dir.publish}..." />
                        <mkdir dir="${dir.publish}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.publish}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}" />
                        </copy>
                    </else>
                </if>
            </else>
        </if>
    </target>

    <target name="copy-source-to-intermediate"
        depends="clean, mkdirs"
        description="(PRIVATE) Copies the source files to the build publish dir, except the files that will be optimized" >

        <echo message="Copying ${dir.source} files (except those that will be optimized) to ${dir.publish}..."/>

        <copy todir="./${dir.intermediate}" includeEmptyDirs="true">
            <fileset dir="${dir.source}/" excludes="${file.excludes}">
            </fileset>
        </copy>
    </target>

    <target name="run-rjs-on-intermediate"
        depends="copy-source-to-intermediate"
        description="(PRIVATE) Runs Require.js's r.js optimizer on files in intermediate">

        <echo message="Running r.js..." />

        <java classname="org.mozilla.javascript.tools.shell.Main">
            <classpath>
                <pathelement location="./${dir.build.tools}/${tool.rhino}" />
            </classpath>
            <arg value="${basedir}/${tool.rjs}" />
            <arg value="-o" />
            <arg value="${basedir}/${tool.rjs.config}" />
        </java>
    </target>

    <target name="copy-intermediate-to-publish"
        depends="copy-source-to-intermediate"
        description="Copies intermediate files to publish" >

        <echo message="Copying ${dir.intermediate} files to ${dir.publish}..." />

        <copy todir="./${dir.publish}">
            <fileset dir="${dir.intermediate}/">
            </fileset>
        </copy>
    </target>

    <target name="build"
        description="Runs the -build.env target for the specified env (dev, test, production)"
        depends="
        intro,
        clean,
        scss,
        mkdirs,
        copy-source-to-intermediate,
        run-rjs-on-intermediate,
        copy-intermediate-to-publish
        ">
    </target>

    <!-- Macro for running the Ruby-based scss utility on a file -->
    <macrodef name="scss">
        <attribute name="input"/>
        <attribute name="output"/>

        <sequential>
            <path id="JRuby">
                <fileset file="./${dir.build.tools}/jruby-complete-1.6.7.2.jar"/>
                <fileset file="./${dir.build.tools}/gem-sass.jar"/>
            </path>
            <property name="scss.src" value="${basedir}/@{input}" />
            <property name="scss.dest" value="${basedir}/@{output}" />

            <script language="ruby" classpathref="JRuby">
                <![CDATA[require 'rubygems'
                    require 'sass'
                    require 'sass/exec'
                    opts = Sass::Exec::Sass.new([$project.getProperty('scss.src'), $project.getProperty('scss.dest')])
                    opts.parse]]>
            </script>

            <echo>Sass (scss): generated @{output}</echo>
        </sequential>
    </macrodef>
</project>
