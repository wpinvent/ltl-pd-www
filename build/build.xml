<?xml version="1.0"?>
<!DOCTYPE project>

<project name="LTL Pickup and Delivery Web Project Build"
    default="build"
    basedir="../">

    <!--
    ***************************************************************************
    *
    * Build Setup
    *
    * Note:
    * This script borrowed a lot from the html5 boilerplate ant-build-script
    * https://github.com/h5bp/ant-build-script
    *
    ***************************************************************************
    -->
    
    <!-- Ant Contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${basedir}/build/tools/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <!-- Load environment variables -->
    <property environment="ENV" />

    <!-- Load properties -->
    <property file="build/build.properties"/>

    <!-- Load build macros -->
    <import file="build.macros.xml" />
    
    <!-- Check Ant version -->
    <fail message="Ant version 1.8.2 or greater is required.">
        <condition>
            <not>
                <antversion atleast="1.8.2"/>
            </not>
        </condition>
    </fail>

    <!-- TODO: check for availability Node.js executable (node) (required for r.js build, and probably other things) -->

    <!--
    ***************************************************************************
    *
    * Build Targets
    *
    ***************************************************************************
    -->

    <target name="intro"
        description="Prints a build starting message.">

        <echo message="-------------------------------------------------" />
        <echo message="Ant build starting..." />
        <echo message="-------------------------------------------------" />

        <!-- Show property values
        <echoproperties />
        -->
    </target>

    <target name="scss-all"
        depends="intro"
        description="Runs scss tool to generate .css files for all application .scss files (not including libs)">

        <echo message="Running SCSS on all application .scss files..." />

        <foreach target="-scss-single" param="file">
            <path>
                <fileset dir="${dir.css}">
                    <include name="**/*.scss" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="-scss-single"
        description="(PRIVATE) Runs SCSS on a single file (used in scss-all)">

        <!-- JRuby doesn't seem to like absolute paths (on Windows (?)), so force them back to relative -->
        <basename file="${file}" suffix=".scss" property="file.basename" />
        <property name="file.scss" value="${dir.css}/${file.basename}.scss" />
        <property name="file.css" value="${dir.css}/${file.basename}.css" />

        <scss input="${file.scss}" output="${file.css}" />
    </target>

    <target name="jslint-all"
        depends="intro"
        description="Runs jslint on all application .js files (not including libs)">

        <echo message="Running JSLINT on all application .js files..." />

        <foreach target="-jslint-single" param="file">
            <path>
                <fileset dir="${dir.source}">
                    <include name="main.js" />
                    <include name="${dir.js}/**/*.js" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="-jslint-single"
        description="(PRIVATE) Runs JSLINT on a single file (used in jslint-all)">
        <jslint input="${file}" />
    </target>

    <target name="jshint-all"
        depends="intro"
        description="Runs jshint on all application .js files (not including libs)">

        <echo message="Running JSHINT on all application .js files..." />

        <foreach target="-jshint-single" param="file">
            <path>
                <fileset dir="${dir.source}">
                    <include name="main.js" />
                    <include name="${dir.js}/**/*.js" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="-jshint-single"
        description="(PRIVATE) Runs JSHINT on a single file (used in jshint-all)">
        <jshint input="${file}" />
    </target>

    <target name="csslint-all"
        depends="intro, scss-all"
        description="Runs csslint on all application .css files (not including libs)">

        <echo message="Running CSSLINT on all application .css files..." />

        <foreach target="-csslint-single" param="file">
            <path>
                <fileset dir="${dir.css}">
                    <include name="**/*.css" />
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="-csslint-single"
        description="(PRIVATE) Runs CSSLINT on a single file (used in csslint-all)">

        <csslint input="${file}" />
    </target>

    <target name="clean"
        depends="intro"
        description="Deletes build output dirs.">

        <echo message="Deleting dir: ${dir.intermediate}..."/>
        <delete dir="./${dir.intermediate}/"/>

        <echo message="Deleting dir: ${dir.publish}..."/>
        <delete dir="./${dir.publish}/"/>
    </target>

    <target name="mkdirs"
        depends="intro"
        description="Creates the initial build output dirs." >

        <!-- TODO: r.js creates the publish dir now, might be able to remove that from here... -->

        <condition property="publish.exists">
            <available file="${dir.publish}" type="dir"/>
        </condition>

        <condition property="intermediate.exists">
            <available file="${dir.intermediate}" type="dir"/>
        </condition>

        <if>
            <or>
                <equals arg1="${dir.publish}" arg2="."/>
                <equals arg1="${dir.publish}" arg2=".."/>
                <equals arg1="${dir.publish}" arg2="/"/>
                <equals arg1="${dir.publish}" arg2="./"/>
                <equals arg1="${dir.publish}" arg2="../"/>
            </or>
            <then>
                <fail message="Your dir.publish folder is set to ${dir.publish} which could delete your entire site or worse. Change it in project.properties"/>
            </then>
            <else>
                <echo message="Creating directory structure... ${dir.publish}"/>
                <if>
                    <and>
                        <equals arg1="${publish.exists}" arg2="true"/>
                        <equals arg1="${intermediate.exists}" arg2="true"/>
                    </and>
                    <then>
                        <echo message="The directories ${dir.publish} and ${dir.intermediate} already exist."/>
                    </then>
                    <else>
                        <echo message="Creating dir: ${dir.intermediate}..." />
                        <mkdir dir="${dir.intermediate}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.intermediate}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}"/>
                        </copy>

                        <echo message="Creating dir: ${dir.publish}..." />
                        <mkdir dir="${dir.publish}"/>

                        <echo message="Copying ${dir.source} files (except excludes) to ${dir.intermediate}..." />
                        <copy todir="${dir.publish}" includeEmptyDirs="true">
                            <dirset dir="${dir.source}/" excludes="${file.excludes}" />
                        </copy>
                    </else>
                </if>
            </else>
        </if>
    </target>

    <target name="copy-source-to-intermediate"
        depends="mkdirs"
        description="Copies the source files to the intermediate staging area" >

        <echo message="Copying source files to intermediate..." />

        <copy todir="./${dir.intermediate}" includeEmptyDirs="true">
            <fileset dir="${dir.source}/" excludes="${file.excludes}" />
        </copy>
    </target>

    <target name="run-rjs-on-intermediate"
        depends="copy-source-to-intermediate"
        description="Runs Require's r.js optimizer on files in intermediate">

        <echo message="Running r.js on intermediate files..." />

        <!-- Use Node rather than Rhino - Rhino is slower and seems to have trouble with r.js -->
        <exec executable="node" failonerror="true">
            <arg line="${basedir}/${tool.rjs}" />
            <arg line="-o" />
            <arg line="${basedir}/${tool.rjs.config}" />
        </exec>
    </target>

    <target name="finalize-build"
        depends="run-rjs-on-intermediate"
        description="Does the final cleanup on the published files">

        <echo message="Deleting build.txt" />
        <delete file="${dir.publish}/build.txt" />

        <echo message="Deleting .scss files" />
        <delete>
            <fileset dir="${dir.publish}/css" includes="**/*.scss" />
        </delete>

        <echo message="Deleting .bat files" />
        <delete>
            <fileset dir="${dir.publish}/" includes="*.bat" />
        </delete>
    </target>

    <target name="build"
        description="Runs a full build."
        depends="
        intro,
        clean,
        scss-all,
        jslint-all,
        jshint-all,
        csslint-all,
        mkdirs,
        copy-source-to-intermediate,
        run-rjs-on-intermediate,
        finalize-build
        ">
        <!-- TODO: clean/compress html (see h5bp ant-build-script - htmlcompressor) -->
        <!-- TODO: clean/compress css (see h5bp ant-build-script - yuicompressor) -->
        <!-- TODO: optimize pngs (see h5bp ant-build-script) -->
        <!-- TODO: optimize jpgs (see h5bp ant-build-script) -->
        <!-- TODO: generate documentation (jsdoc3) -->

        <echo message="----------------------------------------" />
        <echo message="BUILD COMPLETE!" />
        <echo message="----------------------------------------" />
    </target>
</project>
